{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortMonth = exports.formatMonth = void 0;\nexports.getFormatter = getFormatter;\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nvar formatterCache = new Map();\nfunction getFormatter(options) {\n  return function (locale, date) {\n    var localeWithDefault = locale || (0, _getUserLocale[\"default\"])();\n    if (!formatterCache.has(localeWithDefault)) {\n      formatterCache.set(localeWithDefault, new Map());\n    }\n    var formatterCacheLocale = formatterCache.get(localeWithDefault);\n    if (!formatterCacheLocale.has(options)) {\n      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);\n    }\n    return formatterCacheLocale.get(options)(date);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatShortMonthOptions = {\n  month: 'short'\n};\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatShortMonth = getSafeFormatter(formatShortMonthOptions);\nexports.formatShortMonth = formatShortMonth;","map":{"version":3,"names":["Object","defineProperty","exports","value","formatShortMonth","formatMonth","getFormatter","_getUserLocale","_interopRequireDefault","require","obj","__esModule","formatterCache","Map","options","locale","date","localeWithDefault","has","set","formatterCacheLocale","get","Intl","DateTimeFormat","format","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatMonthOptions","month","formatShortMonthOptions"],"sources":["/home/yuvrajchandrawanshi/react/day3/node_modules/react-date-picker/dist/shared/dateFormatter.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortMonth = exports.formatMonth = void 0;\nexports.getFormatter = getFormatter;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar formatterCache = new Map();\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    var localeWithDefault = locale || (0, _getUserLocale[\"default\"])();\n\n    if (!formatterCache.has(localeWithDefault)) {\n      formatterCache.set(localeWithDefault, new Map());\n    }\n\n    var formatterCacheLocale = formatterCache.get(localeWithDefault);\n\n    if (!formatterCacheLocale.has(options)) {\n      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);\n    }\n\n    return formatterCacheLocale.get(options)(date);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatShortMonthOptions = {\n  month: 'short'\n};\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatShortMonth = getSafeFormatter(formatShortMonthOptions);\nexports.formatShortMonth = formatShortMonth;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,gBAAgB,GAAGF,OAAO,CAACG,WAAW,GAAG,KAAK,CAAC;AACvDH,OAAO,CAACI,YAAY,GAAGA,YAAY;AAEnC,IAAIC,cAAc,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAEvE,SAASD,sBAAsB,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAAE;AAEhG,IAAIE,cAAc,GAAG,IAAIC,GAAG,EAAE;AAE9B,SAASP,YAAY,CAACQ,OAAO,EAAE;EAC7B,OAAO,UAAUC,MAAM,EAAEC,IAAI,EAAE;IAC7B,IAAIC,iBAAiB,GAAGF,MAAM,IAAI,CAAC,CAAC,EAAER,cAAc,CAAC,SAAS,CAAC,GAAG;IAElE,IAAI,CAACK,cAAc,CAACM,GAAG,CAACD,iBAAiB,CAAC,EAAE;MAC1CL,cAAc,CAACO,GAAG,CAACF,iBAAiB,EAAE,IAAIJ,GAAG,EAAE,CAAC;IAClD;IAEA,IAAIO,oBAAoB,GAAGR,cAAc,CAACS,GAAG,CAACJ,iBAAiB,CAAC;IAEhE,IAAI,CAACG,oBAAoB,CAACF,GAAG,CAACJ,OAAO,CAAC,EAAE;MACtCM,oBAAoB,CAACD,GAAG,CAACL,OAAO,EAAE,IAAIQ,IAAI,CAACC,cAAc,CAACN,iBAAiB,EAAEH,OAAO,CAAC,CAACU,MAAM,CAAC;IAC/F;IAEA,OAAOJ,oBAAoB,CAACC,GAAG,CAACP,OAAO,CAAC,CAACE,IAAI,CAAC;EAChD,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASS,UAAU,CAACT,IAAI,EAAE;EACxB,IAAIU,QAAQ,GAAG,IAAIC,IAAI,CAACX,IAAI,CAAC;EAC7B,OAAO,IAAIW,IAAI,CAACD,QAAQ,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxC;AAEA,SAASC,gBAAgB,CAACf,OAAO,EAAE;EACjC,OAAO,UAAUC,MAAM,EAAEC,IAAI,EAAE;IAC7B,OAAOV,YAAY,CAACQ,OAAO,CAAC,CAACC,MAAM,EAAEU,UAAU,CAACT,IAAI,CAAC,CAAC;EACxD,CAAC;AACH;AAEA,IAAIc,kBAAkB,GAAG;EACvBC,KAAK,EAAE;AACT,CAAC;AACD,IAAIC,uBAAuB,GAAG;EAC5BD,KAAK,EAAE;AACT,CAAC;AACD,IAAI1B,WAAW,GAAGwB,gBAAgB,CAACC,kBAAkB,CAAC;AACtD5B,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,IAAID,gBAAgB,GAAGyB,gBAAgB,CAACG,uBAAuB,CAAC;AAChE9B,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB"},"metadata":{},"sourceType":"script"}