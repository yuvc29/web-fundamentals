[{"/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/index.js":"1","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/reportWebVitals.js":"2","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/Login.js":"3","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/App.js":"4","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/ListTodo.js":"5","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/Form.js":"6","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/Todo.js":"7"},{"size":541,"mtime":1667390527811,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1665730071090,"results":"10","hashOfConfig":"9"},{"size":2521,"mtime":1667390575891,"results":"11","hashOfConfig":"9"},{"size":1492,"mtime":1667392562638,"results":"12","hashOfConfig":"9"},{"size":1471,"mtime":1666004919093,"results":"13","hashOfConfig":"9"},{"size":2153,"mtime":1666004200345,"results":"14","hashOfConfig":"9"},{"size":980,"mtime":1665952259852,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"53g1hp",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":3,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/index.js",[],[],[],"/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/reportWebVitals.js",[],[],"/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/Login.js",["41"],[],"import React, { useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport App from \"./App\"\n\nimport axios from \"axios\"\n\n\nexport default function Login() {\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [success, setSuccess] = useState(false)\n\n  function validateForm() {\n\n    return email.length > 0 && password.length > 0;\n\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault();\n    const payload = {email:email, password:password}\n    postUser(payload, setSuccess)\n  }\n\n  return (\n\n    <div className=\"Login\">\n    {\n        success?\n        <App email = {email}/>:\n        <Form onSubmit={handleSubmit}>\n\n            <Form.Group size=\"lg\" controlId=\"email\">\n\n            <Form.Label>Email</Form.Label>\n\n            <Form.Control\n\n                autoFocus\n\n                type=\"email\"\n\n                value={email}\n\n                onChange={(e) => setEmail(e.target.value)}\n\n            />\n\n            </Form.Group>\n\n            <Form.Group size=\"lg\" controlId=\"password\">\n\n            <Form.Label>Password</Form.Label>\n\n            <Form.Control\n\n                type=\"password\"\n\n                value={password}\n\n                onChange={(e) => setPassword(e.target.value)}\n\n            />\n\n            </Form.Group>\n\n            <button onClick={handleSubmit} disable = {!validateForm}>\n\n            Login\n\n            </button>\n\n        </Form>\n    }\n    </div>\n\n  );\n\n}\n\nfunction postUser(payload, setSuccess){\n  // let response;\n    // fetch('http://localhost:8080/login', {\n    //     method: 'POST',\n    //     credentials: 'include',\n    //     headers: {\n    //       \"content-type\": \"application/x-www-form-urlencoded\"\n    //     },\n    //     body: payload\n    // })\n    let response = axios.post(`/login?username=${payload.email}&password=${payload.password}`)\n    .then((response) => {\n        console.log(response)\n        setSuccess(true)\n    });\n    // setSuccess(true)\n}\n\n// const loginOnFinish = (loginCredentials) => {\n//   const bodyContent = \"username=\" + loginCredentials.email + \"&password=\" + loginCredentials.password\n//   fetch(\"http://localhost:8080/login\", {\n//       body: bodyContent,\n//       method: \"POST\",\n//       credentials: 'include',\n//       headers: {\n//           \"content-type\": \"application/x-www-form-urlencoded\"\n//           }\n//   }).then((response) => {\n//       let endpoint = '/users/' + loginCredentials.email;\n//       console.log(endpoint);\n//       navigate(endpoint);\n//   })\n","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/App.js",["42","43","44","45"],[],"import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport ListTodo from './components/ListTodo'\nimport axios from \"axios\"\n\nfunction App(props) {\n    const [todoList, setTodoList] = useState([]);\n    \n    useEffect(() => {getList(props, setTodoList)}, []);\n\n    const add = (todo) =>{\n        setTodoList([...todoList, todo])\n    }\n    const updateList = (newList) =>{\n        // console.log(newList)\n        setTodoList(newList)\n    }\n    return (\n        <div>\n            <Form add = {add} todoList = {todoList}/>\n            {\n                todoList?\n                <ListTodo todoList = {todoList} updateList = {updateList}/> :\n                <p>Waiting...</p>\n            }\n        </div>\n    )\n}\n\nconst getList = async (props, setTodoList) => {\n    // const res = await fetch(\"http://localhost:8080/todo/getlist?user=John.Doe@gmail.com\");\n    // const data = await res.json();\n    // const newList = data.map((todo) =>{\n    //     const {title: title, body: body, dueDate : dueTime, status: status} = todo\n    //     return {title, body, dueTime, status}\n    // })\n    // setTodoList(newList);\n    const data = await axios.get(`/todo/getlist?email=${props.email}`)\n    console.log(data.data)\n    const newList = data.data.map((todo) =>{\n            const {title: title, body: body, dueDate : dueTime, status: status} = todo\n            return {title, body, dueTime, status}\n    })\n    setTodoList(newList);\n};\n\n\nexport default App;\n","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/ListTodo.js",["46"],[],"import Todo from './Todo'\nfunction ListTodo(props){\n    const removeTodo = (toDelete) =>{\n        deleteTodo(toDelete)\n        return props.todoList.filter((todo) => {return todo.title !== toDelete.title})\n    }\n    return (\n        <div>\n        {\n            props.todoList.map((todo) => \n                <li>\n                    {\n                        Object.keys(todo).map(\n                            (key) => {\n                                if(key === 'title')return <ul>Title: {todo[key]}</ul>\n                                else return <Todo todo = {todo} field = {key} todoList = {props.todoList} updateList = {props.updateList}/>\n                            }\n                        )\n                    }\n                    <button onClick = \n                        {\n                            (e)=>\n                            {\n                                e.preventDefault();\n                                props.updateList(removeTodo(todo))\n                                //console.log(props.todoList)\n                            }\n                        }>Delete\n                    </button>\n                </li>\n            )\n        }\n        <button>Save</button>\n        </div>\n    )\n}\n\nconst deleteTodo = async (todo)=>{\n    const res = await fetch(\"http://localhost:8080/todo/delete?user=\"+\"John.Doe@gmail.com+\"+todo.title, {method: 'DELETE'});\n    const data = await res.json();\n    console.log(data);\n}\n\nexport default ListTodo","/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/Form.js",[],[],"/home/yuvrajchandrawanshi/react/web-fundamentals/day3/src/components/Todo.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":97,"column":9,"nodeType":"49","messageId":"50","endLine":97,"endColumn":17},{"ruleId":"51","severity":1,"message":"52","line":10,"column":52,"nodeType":"53","endLine":10,"endColumn":54,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":42,"column":20,"nodeType":"57","messageId":"58","endLine":42,"endColumn":32,"fix":"59"},{"ruleId":"55","severity":1,"message":"60","line":42,"column":34,"nodeType":"57","messageId":"58","endLine":42,"endColumn":44,"fix":"61"},{"ruleId":"55","severity":1,"message":"62","line":42,"column":65,"nodeType":"57","messageId":"58","endLine":42,"endColumn":79,"fix":"63"},{"ruleId":"64","severity":1,"message":"65","line":39,"column":70,"nodeType":"66","messageId":"67","endLine":39,"endColumn":71},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-useless-rename","Destructuring assignment title unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"69","text":"70"},"Destructuring assignment body unnecessarily renamed.",{"range":"71","text":"72"},"Destructuring assignment status unnecessarily renamed.",{"range":"73","text":"74"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"desc":"75","fix":"76"},[1316,1328],"title",[1330,1340],"body",[1361,1375],"status","Update the dependencies array to be: [props]",{"range":"77","text":"78"},[302,304],"[props]"]